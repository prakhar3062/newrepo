{"ast":null,"code":"import 'firebase/messaging';\nimport firebase from 'firebase/app';\nimport localforage from 'localforage';\nimport { updateDeviceToken } from '../src/apis/auth-api';\nconst firebaseCloudMessaging = {\n  tokenInlocalforage: async () => {\n    return localforage.getItem('fcm_token');\n  },\n  userInlocalforage: async () => {\n    return localforage.getItem('fcm_token_user');\n  },\n  init: async function (props) {\n    let data = {\n      apiKey: process.env.FIREBASE_API_KEY,\n      projectId: process.env.projectId,\n      messagingSenderId: process.env.messagingSenderId,\n      appId: process.env.appId\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(data);\n    }\n\n    try {\n      let user = await this.userInlocalforage();\n\n      if (user && user.id == props.id) {\n        const tokenInLocalForage = await this.tokenInlocalforage();\n\n        if (tokenInLocalForage !== null) {\n          return tokenInLocalForage;\n        }\n      }\n\n      const messaging = firebase.messaging();\n      await messaging.requestPermission(); // console.log('isSupported', messaging.isSupported())\n\n      const token = await messaging.getToken();\n      updateDeviceToken(props.id, token);\n      localforage.setItem('fcm_token', token);\n      localforage.setItem('fcm_token_user', props);\n      console.log('fcm_token', token);\n      return token;\n    } catch (error) {\n      console.log('fcmerror', error);\n    }\n  }\n};\nexport { firebaseCloudMessaging };","map":{"version":3,"sources":["C:/Users/91911/Downloads/frontend/utils/webPush.js"],"names":["firebase","localforage","updateDeviceToken","firebaseCloudMessaging","tokenInlocalforage","getItem","userInlocalforage","init","props","data","apiKey","process","env","FIREBASE_API_KEY","projectId","messagingSenderId","appId","apps","length","initializeApp","user","id","tokenInLocalForage","messaging","requestPermission","token","getToken","setItem","console","log","error"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,MAAMC,sBAAsB,GAAG;AAC3BC,EAAAA,kBAAkB,EAAE,YAAY;AAC5B,WAAOH,WAAW,CAACI,OAAZ,CAAoB,WAApB,CAAP;AACH,GAH0B;AAK3BC,EAAAA,iBAAiB,EAAE,YAAY;AAC3B,WAAOL,WAAW,CAACI,OAAZ,CAAoB,gBAApB,CAAP;AACH,GAP0B;AAS3BE,EAAAA,IAAI,EAAE,gBAAgBC,KAAhB,EAAuB;AACzB,QAAIC,IAAI,GAAG;AACPC,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADb;AAEPC,MAAAA,SAAS,EAAEH,OAAO,CAACC,GAAR,CAAYE,SAFhB;AAGPC,MAAAA,iBAAiB,EAAEJ,OAAO,CAACC,GAAR,CAAYG,iBAHxB;AAIPC,MAAAA,KAAK,EAAEL,OAAO,CAACC,GAAR,CAAYI;AAJZ,KAAX;;AAMA,QAAI,CAAChB,QAAQ,CAACiB,IAAT,CAAcC,MAAnB,EAA2B;AAEvBlB,MAAAA,QAAQ,CAACmB,aAAT,CAAuBV,IAAvB;AACH;;AAED,QAAI;AACA,UAAIW,IAAI,GAAG,MAAM,KAAKd,iBAAL,EAAjB;;AACA,UAAIc,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWb,KAAK,CAACa,EAA7B,EAAiC;AAC7B,cAAMC,kBAAkB,GAAG,MAAM,KAAKlB,kBAAL,EAAjC;;AACA,YAAIkB,kBAAkB,KAAK,IAA3B,EAAiC;AAE7B,iBAAOA,kBAAP;AACH;AACJ;;AAGD,YAAMC,SAAS,GAAGvB,QAAQ,CAACuB,SAAT,EAAlB;AACA,YAAMA,SAAS,CAACC,iBAAV,EAAN,CAZA,CAcA;;AACA,YAAMC,KAAK,GAAG,MAAMF,SAAS,CAACG,QAAV,EAApB;AACAxB,MAAAA,iBAAiB,CAACM,KAAK,CAACa,EAAP,EAAWI,KAAX,CAAjB;AAEAxB,MAAAA,WAAW,CAAC0B,OAAZ,CAAoB,WAApB,EAAiCF,KAAjC;AACAxB,MAAAA,WAAW,CAAC0B,OAAZ,CAAoB,gBAApB,EAAsCnB,KAAtC;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB;AACA,aAAOA,KAAP;AACH,KAtBD,CAsBE,OAAOK,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,KAAxB;AACH;AACJ;AA9C0B,CAA/B;AAiDA,SAAS3B,sBAAT","sourcesContent":["import 'firebase/messaging'\nimport firebase from 'firebase/app'\nimport localforage from 'localforage'\nimport { updateDeviceToken } from '../src/apis/auth-api'\n\nconst firebaseCloudMessaging = {\n    tokenInlocalforage: async () => {\n        return localforage.getItem('fcm_token')\n    },\n\n    userInlocalforage: async () => {\n        return localforage.getItem('fcm_token_user')\n    },\n\n    init: async function (props) {\n        let data = {\n            apiKey: process.env.FIREBASE_API_KEY,\n            projectId: process.env.projectId,\n            messagingSenderId: process.env.messagingSenderId,\n            appId: process.env.appId,\n        }\n        if (!firebase.apps.length) {\n\n            firebase.initializeApp(data)\n        }\n\n        try {\n            let user = await this.userInlocalforage()\n            if (user && user.id == props.id) {\n                const tokenInLocalForage = await this.tokenInlocalforage();\n                if (tokenInLocalForage !== null) {\n\n                    return tokenInLocalForage\n                }\n            }\n\n\n            const messaging = firebase.messaging()\n            await messaging.requestPermission()\n\n            // console.log('isSupported', messaging.isSupported())\n            const token = await messaging.getToken()\n            updateDeviceToken(props.id, token)\n\n            localforage.setItem('fcm_token', token)\n            localforage.setItem('fcm_token_user', props)\n            console.log('fcm_token', token)\n            return token\n        } catch (error) {\n            console.log('fcmerror', error)\n        }\n    },\n}\n\nexport { firebaseCloudMessaging }"]},"metadata":{},"sourceType":"module"}