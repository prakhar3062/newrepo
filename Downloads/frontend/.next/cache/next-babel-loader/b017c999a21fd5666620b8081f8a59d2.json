{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport 'firebase/messaging';\nimport firebase from 'firebase/app';\nimport localforage from 'localforage';\nimport { updateDeviceToken } from '../src/apis/auth-api';\nvar firebaseCloudMessaging = {\n  tokenInlocalforage: function () {\n    var _tokenInlocalforage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", localforage.getItem('fcm_token'));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function tokenInlocalforage() {\n      return _tokenInlocalforage.apply(this, arguments);\n    }\n\n    return tokenInlocalforage;\n  }(),\n  userInlocalforage: function () {\n    var _userInlocalforage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", localforage.getItem('fcm_token_user'));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function userInlocalforage() {\n      return _userInlocalforage.apply(this, arguments);\n    }\n\n    return userInlocalforage;\n  }(),\n  init: function () {\n    var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n      var data, user, tokenInLocalForage, messaging, token;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = {\n                apiKey: process.env.FIREBASE_API_KEY,\n                projectId: process.env.projectId,\n                messagingSenderId: process.env.messagingSenderId,\n                appId: process.env.appId\n              };\n\n              if (!firebase.apps.length) {\n                firebase.initializeApp(data);\n              }\n\n              _context3.prev = 2;\n              _context3.next = 5;\n              return this.userInlocalforage();\n\n            case 5:\n              user = _context3.sent;\n\n              if (!(user && user.id == props.id)) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 9;\n              return this.tokenInlocalforage();\n\n            case 9:\n              tokenInLocalForage = _context3.sent;\n\n              if (!(tokenInLocalForage !== null)) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", tokenInLocalForage);\n\n            case 12:\n              messaging = firebase.messaging();\n              _context3.next = 15;\n              return messaging.requestPermission();\n\n            case 15:\n              _context3.next = 17;\n              return messaging.getToken();\n\n            case 17:\n              token = _context3.sent;\n              updateDeviceToken(props.id, token);\n              localforage.setItem('fcm_token', token);\n              localforage.setItem('fcm_token_user', props);\n              console.log('fcm_token', token);\n              return _context3.abrupt(\"return\", token);\n\n            case 25:\n              _context3.prev = 25;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.log('fcmerror', _context3.t0);\n\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[2, 25]]);\n    }));\n\n    function init(_x) {\n      return _init.apply(this, arguments);\n    }\n\n    return init;\n  }()\n};\nexport { firebaseCloudMessaging };","map":{"version":3,"sources":["C:/Users/91911/Downloads/frontend/utils/webPush.js"],"names":["firebase","localforage","updateDeviceToken","firebaseCloudMessaging","tokenInlocalforage","getItem","userInlocalforage","init","props","data","apiKey","process","env","FIREBASE_API_KEY","projectId","messagingSenderId","appId","apps","length","initializeApp","user","id","tokenInLocalForage","messaging","requestPermission","getToken","token","setItem","console","log"],"mappings":";;AAAA,OAAO,oBAAP;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,IAAMC,sBAAsB,GAAG;AAC3BC,EAAAA,kBAAkB;AAAA,uFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CACTH,WAAW,CAACI,OAAZ,CAAoB,WAApB,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADS;AAK3BC,EAAAA,iBAAiB;AAAA,sFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDACRL,WAAW,CAACI,OAAZ,CAAoB,gBAApB,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALU;AAS3BE,EAAAA,IAAI;AAAA,yEAAE,kBAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,IADF,GACS;AACPC,gBAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADb;AAEPC,gBAAAA,SAAS,EAAEH,OAAO,CAACC,GAAR,CAAYE,SAFhB;AAGPC,gBAAAA,iBAAiB,EAAEJ,OAAO,CAACC,GAAR,CAAYG,iBAHxB;AAIPC,gBAAAA,KAAK,EAAEL,OAAO,CAACC,GAAR,CAAYI;AAJZ,eADT;;AAOF,kBAAI,CAAChB,QAAQ,CAACiB,IAAT,CAAcC,MAAnB,EAA2B;AAEvBlB,gBAAAA,QAAQ,CAACmB,aAAT,CAAuBV,IAAvB;AACH;;AAVC;AAAA;AAAA,qBAamB,KAAKH,iBAAL,EAbnB;;AAAA;AAaMc,cAAAA,IAbN;;AAAA,oBAcMA,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWb,KAAK,CAACa,EAd/B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAeuC,KAAKjB,kBAAL,EAfvC;;AAAA;AAeYkB,cAAAA,kBAfZ;;AAAA,oBAgBUA,kBAAkB,KAAK,IAhBjC;AAAA;AAAA;AAAA;;AAAA,gDAkBiBA,kBAlBjB;;AAAA;AAuBQC,cAAAA,SAvBR,GAuBoBvB,QAAQ,CAACuB,SAAT,EAvBpB;AAAA;AAAA,qBAwBQA,SAAS,CAACC,iBAAV,EAxBR;;AAAA;AAAA;AAAA,qBA2BsBD,SAAS,CAACE,QAAV,EA3BtB;;AAAA;AA2BQC,cAAAA,KA3BR;AA4BExB,cAAAA,iBAAiB,CAACM,KAAK,CAACa,EAAP,EAAWK,KAAX,CAAjB;AAEAzB,cAAAA,WAAW,CAAC0B,OAAZ,CAAoB,WAApB,EAAiCD,KAAjC;AACAzB,cAAAA,WAAW,CAAC0B,OAAZ,CAAoB,gBAApB,EAAsCnB,KAAtC;AACAoB,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,KAAzB;AAhCF,gDAiCSA,KAjCT;;AAAA;AAAA;AAAA;AAmCEE,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AATuB,CAA/B;AAiDA,SAAS1B,sBAAT","sourcesContent":["import 'firebase/messaging'\nimport firebase from 'firebase/app'\nimport localforage from 'localforage'\nimport { updateDeviceToken } from '../src/apis/auth-api'\n\nconst firebaseCloudMessaging = {\n    tokenInlocalforage: async () => {\n        return localforage.getItem('fcm_token')\n    },\n\n    userInlocalforage: async () => {\n        return localforage.getItem('fcm_token_user')\n    },\n\n    init: async function (props) {\n        let data = {\n            apiKey: process.env.FIREBASE_API_KEY,\n            projectId: process.env.projectId,\n            messagingSenderId: process.env.messagingSenderId,\n            appId: process.env.appId,\n        }\n        if (!firebase.apps.length) {\n\n            firebase.initializeApp(data)\n        }\n\n        try {\n            let user = await this.userInlocalforage()\n            if (user && user.id == props.id) {\n                const tokenInLocalForage = await this.tokenInlocalforage();\n                if (tokenInLocalForage !== null) {\n\n                    return tokenInLocalForage\n                }\n            }\n\n\n            const messaging = firebase.messaging()\n            await messaging.requestPermission()\n\n            // console.log('isSupported', messaging.isSupported())\n            const token = await messaging.getToken()\n            updateDeviceToken(props.id, token)\n\n            localforage.setItem('fcm_token', token)\n            localforage.setItem('fcm_token_user', props)\n            console.log('fcm_token', token)\n            return token\n        } catch (error) {\n            console.log('fcmerror', error)\n        }\n    },\n}\n\nexport { firebaseCloudMessaging }"]},"metadata":{},"sourceType":"module"}