{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getImageLinkFromUID } from '../helpers/file';\nexport const STATUS_PENDING = 0;\nexport const STATUS_SENT = 1;\nexport const STATUS_DELIVERED = 2;\nexport const STATUS_READ = 3;\nexport const GROUP_CHAT_ALERT_TYPE = {\n  CREATE: \"create\"\n};\nconst defaultMessage = {\n  id: '',\n  body: '',\n  dialog_id: '',\n  date_sent: Math.floor(Date.now() / 1000),\n  attachments: null,\n  sender_id: null,\n  sender: null\n};\nexport class Message {\n  constructor(msg = defaultMessage, currentUser) {\n    this.id = msg.id || msg._id;\n    this.body = msg.body || msg.message;\n    this.group_chat_alert_type = msg.group_chat_alert_type || null;\n    this.dialog_id = msg.chat_dialog_id || msg.extension && msg.extension.dialog_id;\n    this.date_sent = msg.date_sent || msg.extension && msg.extension.date_sent || Math.floor(Date.now() / 1000);\n    this.send_state = Message.getSendState(msg, currentUser);\n    this.attachment = Message.getAttachment(msg);\n    this.sender_id = msg.sender_id || msg.extension && msg.extension.sender_id;\n    this.sender = msg.sender_id;\n  }\n\n  static getAttachment(msg) {\n    var _msg$extension;\n\n    if (msg.attachments && msg.attachments.length > 0) {\n      const attachments = _objectSpread({}, msg.attachments[0]);\n\n      const parseLink = getImageLinkFromUID(msg.attachments[0].uid);\n      attachments.url = parseLink;\n      return [attachments];\n    } else if (msg !== null && msg !== void 0 && (_msg$extension = msg.extension) !== null && _msg$extension !== void 0 && _msg$extension.attachments && msg.extension.attachments.length > 0) {\n      const attachments = _objectSpread({}, msg.extension.attachments[0]);\n\n      const parseLink = getImageLinkFromUID(msg.extension.attachments[0].uid);\n      attachments.url = parseLink;\n      return [attachments];\n    } else return null;\n  }\n\n  static getSendState(msg, currentUser) {\n    var _msg$read_ids, _msg$delivered_ids;\n\n    if (msg !== null && msg !== void 0 && (_msg$read_ids = msg.read_ids) !== null && _msg$read_ids !== void 0 && _msg$read_ids.find(_id => _id !== currentUser)) {\n      return STATUS_READ;\n    }\n\n    if (msg !== null && msg !== void 0 && (_msg$delivered_ids = msg.delivered_ids) !== null && _msg$delivered_ids !== void 0 && _msg$delivered_ids.find(msg => msg.delivered_ids !== currentUser)) {\n      return STATUS_DELIVERED;\n    }\n\n    return STATUS_PENDING;\n  }\n\n}\nexport class FakeMessage {\n  constructor(msg) {\n    this.attachment = msg.extension.attachments;\n    this.body = msg.body;\n    this.date_sent = msg.extension.date_sent;\n    this.dialog_id = msg.extension.dialog_id;\n    this.id = msg.id;\n    this.send_state = 0;\n    this.sender = undefined;\n    this.sender_id = msg.extension.sender_id;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/91911/Downloads/frontend/src/redux/models/message.js"],"names":["getImageLinkFromUID","STATUS_PENDING","STATUS_SENT","STATUS_DELIVERED","STATUS_READ","GROUP_CHAT_ALERT_TYPE","CREATE","defaultMessage","id","body","dialog_id","date_sent","Math","floor","Date","now","attachments","sender_id","sender","Message","constructor","msg","currentUser","_id","message","group_chat_alert_type","chat_dialog_id","extension","send_state","getSendState","attachment","getAttachment","length","parseLink","uid","url","read_ids","find","delivered_ids","FakeMessage","undefined"],"mappings":"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","sourcesContent":["import { getImageLinkFromUID } from '../helpers/file'\n\nexport const STATUS_PENDING = 0\nexport const STATUS_SENT = 1\nexport const STATUS_DELIVERED = 2\nexport const STATUS_READ = 3\n\nexport const GROUP_CHAT_ALERT_TYPE = {\n  CREATE: \"create\"\n}\n\nconst defaultMessage = {\n  id: '',\n  body: '',\n  dialog_id: '',\n  date_sent: Math.floor(Date.now() / 1000),\n  attachments: null,\n  sender_id: null,\n  sender: null\n}\n\nexport class Message {\n  constructor(msg = defaultMessage, currentUser) {\n    this.id = msg.id || msg._id\n    this.body = msg.body || msg.message\n    this.group_chat_alert_type = msg.group_chat_alert_type || null\n    this.dialog_id = msg.chat_dialog_id || (msg.extension && msg.extension.dialog_id)\n    this.date_sent = msg.date_sent || (msg.extension && msg.extension.date_sent) || Math.floor(Date.now() / 1000)\n    this.send_state = Message.getSendState(msg, currentUser)\n    this.attachment = Message.getAttachment(msg)\n    this.sender_id = msg.sender_id || (msg.extension && msg.extension.sender_id)\n    this.sender = msg.sender_id\n  }\n\n  static getAttachment(msg) {\n    if (msg.attachments && msg.attachments.length > 0) {\n      const attachments = { ...msg.attachments[0] }\n      const parseLink = getImageLinkFromUID(msg.attachments[0].uid)\n      attachments.url = parseLink\n      return [attachments]\n    } else if (msg?.extension?.attachments && msg.extension.attachments.length > 0) {\n      const attachments = { ...msg.extension.attachments[0] }\n      const parseLink = getImageLinkFromUID(msg.extension.attachments[0].uid)\n      attachments.url = parseLink\n      return [attachments]\n    } else return null\n  }\n\n  static getSendState(msg, currentUser) {\n    if (msg?.read_ids?.find(_id => _id !== currentUser)) {\n      return STATUS_READ\n    }\n    if (msg?.delivered_ids?.find(msg => msg.delivered_ids !== currentUser)) {\n      return STATUS_DELIVERED\n    }\n    return STATUS_PENDING\n  }\n\n}\n\nexport class FakeMessage {\n  constructor(msg) {\n    this.attachment = msg.extension.attachments\n    this.body = msg.body\n    this.date_sent = msg.extension.date_sent\n    this.dialog_id = msg.extension.dialog_id\n    this.id = msg.id\n    this.send_state = 0\n    this.sender = undefined\n    this.sender_id = msg.extension.sender_id\n  }\n}"]},"metadata":{},"sourceType":"module"}