{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SELECTED_DIALOG, UN_SELECTED_DIALOG } from \"../actionTypes/selectedDialog\";\nexport default ((dialog = null, action) => {\n  switch (action.type) {\n    case SELECTED_DIALOG:\n      {\n        return _objectSpread({}, action.dialog);\n      }\n\n    case UN_SELECTED_DIALOG:\n      {\n        return {};\n      }\n\n    default:\n      return dialog;\n  }\n});","map":{"version":3,"sources":["C:/Users/91911/Downloads/frontend/src/redux/reducers/selectedDialog.js"],"names":["SELECTED_DIALOG","UN_SELECTED_DIALOG","dialog","action","type"],"mappings":";;;;;;AAAA,SACEA,eADF,EAEEC,kBAFF,QAGO,+BAHP;AAKA,gBAAe,CAACC,MAAM,GAAG,IAAV,EAAgBC,MAAhB,KAA2B;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,eAAL;AAAsB;AACpB,iCAAYG,MAAM,CAACD,MAAnB;AACD;;AAED,SAAKD,kBAAL;AAAyB;AACvB,eAAO,EAAP;AACD;;AAED;AACE,aAAOC,MAAP;AAVJ;AAYD,CAbD","sourcesContent":["import {\n  SELECTED_DIALOG,\n  UN_SELECTED_DIALOG,\n} from \"../actionTypes/selectedDialog\";\n\nexport default (dialog = null, action) => {\n  switch (action.type) {\n    case SELECTED_DIALOG: {\n      return { ...action.dialog };\n    }\n\n    case UN_SELECTED_DIALOG: {\n      return {};\n    }\n\n    default:\n      return dialog;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}