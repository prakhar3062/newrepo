{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { searchUniversities } from '../../apis/global-api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Typography from '@material-ui/core/Typography';\nimport { simpleSignup, login, googleSignup } from '../../apis/auth-api';\nimport { useDispatch } from 'react-redux';\nimport { authenticated } from '../../redux/actions/auth';\nimport { useRouter } from 'next/router';\nimport { GoogleLogin } from 'react-google-login';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: _defineProperty({\n      padding: '1.5rem 2.0rem'\n    }, theme.breakpoints.up('sm'), {\n      margin: '2.5rem'\n    }),\n    modal: {\n      padding: '0.5rem'\n    },\n    button: {\n      '&:focus': {\n        background: 'rgb(177, 90, 16)'\n      },\n      '& .MuiCircularProgress-colorPrimary': {\n        marginLeft: '10px',\n        color: '#fff'\n      }\n    }\n  };\n});\nexport var AuthForm = function AuthForm(_ref) {\n  _s();\n\n  var type = _ref.type;\n\n  var _useState = useState(''),\n      firstname = _useState[0],\n      setfirstname = _useState[1];\n\n  var _useState2 = useState(''),\n      lastname = _useState2[0],\n      setlastname = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setemail = _useState3[1];\n\n  var _useState4 = useState({\n    name: ''\n  }),\n      university = _useState4[0],\n      setuniversity = _useState4[1];\n\n  var _useState5 = useState(''),\n      password = _useState5[0],\n      setpassword = _useState5[1];\n\n  var _useState6 = useState(false),\n      showpassword = _useState6[0],\n      setshowpassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      confirm_password = _useState7[0],\n      setconfirm_password = _useState7[1];\n\n  var _useState8 = useState(false),\n      showconfirm_password = _useState8[0],\n      setshowconfirm_password = _useState8[1];\n\n  var _useState9 = useState(''),\n      phone_no = _useState9[0],\n      setphone_no = _useState9[1];\n\n  var _useState10 = useState({}),\n      errs = _useState10[0],\n      seterrs = _useState10[1];\n\n  var _useState11 = useState([]),\n      universities = _useState11[0],\n      setuniversities = _useState11[1];\n\n  var _useState12 = useState(''),\n      branch = _useState12[0],\n      setbranch = _useState12[1];\n\n  var _useState13 = useState(false),\n      loading = _useState13[0],\n      setloading = _useState13[1];\n\n  var _useState14 = useState(false),\n      btnloading = _useState14[0],\n      setbtnloading = _useState14[1];\n\n  var _useState15 = useState(true),\n      backdrop = _useState15[0],\n      setbackdrop = _useState15[1];\n\n  var _useState16 = useState([]),\n      formerrs = _useState16[0],\n      setformerrs = _useState16[1];\n\n  var _useState17 = useState(false),\n      showRedirect = _useState17[0],\n      setshowRedirect = _useState17[1];\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var handleSubmit = function handleSubmit(e) {\n    setformerrs([]);\n    submitSignUp();\n  };\n\n  var submitLogin = function submitLogin() {\n    setshowRedirect(false);\n    setformerrs([]);\n    setbtnloading(true);\n    var data = {\n      email: email,\n      password: password\n    };\n    login(data).then(function (response) {\n      if (response.error) {\n        setbtnloading(false);\n        setformerrs(response.msg);\n      } else {\n        setbtnloading(false);\n        var user = response.body.user;\n        var accessToken = response.body.user.api_token;\n        var favEvents = response.body.favEvents;\n        var favProducts = response.body.favProducts;\n        setLogin(user, accessToken, favEvents, favProducts);\n        setshowRedirect(true);\n      }\n    });\n  };\n\n  var submitSignUp = function submitSignUp() {\n    setshowRedirect(false);\n    setbtnloading(true); // let university_id = universities.find(\n    //   (item) => item.name == university.name\n    // );\n\n    var data = {\n      // first_name: firstname,\n      // last_name: lastname,\n      email: email,\n      // university_id: university_id.id,\n      password: password // phone_number: phone_no,\n      // branch: branch,\n\n    };\n    simpleSignup(data).then(function (response) {\n      if (response.error) {\n        setbtnloading(false);\n        setformerrs(response.msg);\n      } else {\n        var user = response.body.user;\n        var accessToken = response.body.user.api_token;\n        setbtnloading(false);\n        var favEvents = response.body.favEvents;\n        var favProducts = response.body.favProducts;\n        setLogin(user, accessToken, favEvents, favProducts);\n        setshowRedirect(true);\n      }\n    });\n  };\n\n  var setLogin = function setLogin(user, accessToken, favEvents, favProducts) {\n    console.log(user, accessToken);\n    dispatch(authenticated(user, accessToken, favEvents, favProducts));\n\n    if (user.is_complete) {\n      router.push('/');\n    } else {\n      router.push('/profile/edit');\n    }\n  };\n\n  var responseGoogleSuccess = function responseGoogleSuccess(response) {\n    var data = {\n      email: response.profileObj.email,\n      google_id: response.googleId\n    }; // return\n\n    googleSignup(data).then(function (response) {\n      if (response.error) {\n        setbtnloading(false);\n        setformerrs(response.msg);\n      } else {\n        var user = response.body.user;\n        var accessToken = response.body.user.api_token;\n        setbtnloading(false);\n        var favEvents = response.body.favEvents;\n        var favProducts = response.body.favProducts;\n        setLogin(user, accessToken, favEvents, favProducts);\n        setshowRedirect(true);\n      }\n    });\n  };\n\n  var responseGoogleFailure = function responseGoogleFailure(response) {\n    console.log(response); // alert('Oops!! there was some problem while logging in.')\n  };\n\n  var backdropClose = function backdropClose() {\n    setbackdrop(false);\n  };\n\n  var validateform = function validateform(e) {\n    e.preventDefault();\n\n    if (type == 'login') {\n      submitLogin();\n      return;\n    }\n\n    var err = {};\n\n    if (password != confirm_password) {\n      err.no_same = 'true';\n    }\n\n    if (password.length < 8) {\n      err.pwd_length = 'true';\n    } // if (!university.name) {\n    //   err.university = \"true\";\n    // }\n\n\n    seterrs(err);\n    var has_error = Object.keys(err).length;\n\n    if (!parseInt(has_error)) {\n      handleSubmit();\n    }\n  };\n\n  var updateformData = function updateformData(e, type) {\n    e.preventDefault();\n    eval('set' + type + \"('\" + e.target.value + \"')\");\n  };\n\n  var handleUniSearch = function handleUniSearch(e) {\n    var value = e.target.value;\n    if (!value) return;\n    setloading(true);\n    searchUniversities(value).then(function (response) {\n      setloading(false);\n      setuniversities(response);\n    });\n  };\n\n  var gotoForgotPassword = function gotoForgotPassword() {\n    router.push('/forgot-password');\n  };\n\n  return __jsx(\"div\", {\n    className: classes.form\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    className: \"googleBtn\"\n  }, __jsx(GoogleLogin, {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    buttonText: type == 'login' ? 'Login with Google' : 'SignUp with Google',\n    onSuccess: responseGoogleSuccess,\n    onFailure: responseGoogleFailure,\n    cookiePolicy: 'single_host_origin'\n  })), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, \"or\"), __jsx(\"br\", null), __jsx(\"form\", {\n    className: classes.container,\n    onSubmit: validateform\n  }, type == 'signup' && __jsx(React.Fragment, null), __jsx(TextField, {\n    required: true,\n    margin: \"dense\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true,\n    value: email,\n    onChange: function onChange(e) {\n      return updateformData(e, 'email');\n    },\n    name: \"email\"\n  }), type == 'signup' && __jsx(React.Fragment, null, errs['university'] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Please select a university.\")), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, __jsx(TextField, {\n    required: true,\n    margin: \"dense\",\n    label: \"Password\",\n    type: showpassword ? 'text' : 'password',\n    fullWidth: true,\n    value: password,\n    onChange: function onChange(e) {\n      return updateformData(e, 'password');\n    },\n    name: \"password\"\n  }), __jsx(\"span\", {\n    onClick: function onClick() {\n      return setshowpassword(!showpassword);\n    }\n  }, ' ', showpassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null))), type == 'signup' && __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, __jsx(TextField, {\n    required: true,\n    margin: \"dense\",\n    label: \"Confirm Password\",\n    type: showconfirm_password ? 'text' : 'password',\n    fullWidth: true,\n    value: confirm_password,\n    onChange: function onChange(e) {\n      return updateformData(e, 'confirm_password');\n    },\n    name: \"confirm_password\"\n  }), __jsx(\"span\", {\n    onClick: function onClick() {\n      return setshowconfirm_password(!showconfirm_password);\n    }\n  }, ' ', showconfirm_password ? __jsx(Visibility, null) : __jsx(VisibilityOff, null))), errs['no_same'] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Password must match with confirm password\"), errs['pwd_length'] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Password must have 8 characters\"), __jsx(\"div\", null, formerrs.length > 0 && formerrs.map(function (text, index) {\n    return __jsx(Typography, {\n      color: \"error\",\n      key: \"err-\".concat(index)\n    }, text);\n  })), __jsx(Button, {\n    type: \"submit\",\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\"\n  }, type == 'login' ? 'Login' : 'SignUp', btnloading ? __jsx(CircularProgress, {\n    color: \"primary\",\n    size: 20\n  }) : null)), __jsx(\"p\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: gotoForgotPassword\n  }, \"Forgot password ? click \", __jsx(\"span\", null, \"here\")), showRedirect && __jsx(Typography, {\n    color: \"primary\"\n  }, \"Redirecting to profile page!!\", ' ', __jsx(CircularProgress, {\n    color: \"primary\",\n    size: 20\n  })));\n};\n\n_s(AuthForm, \"fhORxNM2Ykf0aDbQope0qn5CiU8=\", false, function () {\n  return [useStyles, useDispatch, useRouter];\n});\n\n_c = AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/91911/Downloads/frontend/src/components/Login_Register/AuthForm.js"],"names":["React","useState","Button","TextField","Autocomplete","makeStyles","useTheme","searchUniversities","CircularProgress","Backdrop","Typography","simpleSignup","login","googleSignup","useDispatch","authenticated","useRouter","GoogleLogin","Visibility","VisibilityOff","useStyles","theme","form","padding","breakpoints","up","margin","modal","button","background","marginLeft","color","AuthForm","type","firstname","setfirstname","lastname","setlastname","email","setemail","name","university","setuniversity","password","setpassword","showpassword","setshowpassword","confirm_password","setconfirm_password","showconfirm_password","setshowconfirm_password","phone_no","setphone_no","errs","seterrs","universities","setuniversities","branch","setbranch","loading","setloading","btnloading","setbtnloading","backdrop","setbackdrop","formerrs","setformerrs","showRedirect","setshowRedirect","classes","dispatch","router","handleSubmit","e","submitSignUp","submitLogin","data","then","response","error","msg","user","body","accessToken","api_token","favEvents","favProducts","setLogin","console","log","is_complete","push","responseGoogleSuccess","profileObj","google_id","googleId","responseGoogleFailure","backdropClose","validateform","preventDefault","err","no_same","length","pwd_length","has_error","Object","keys","parseInt","updateformData","eval","target","value","handleUniSearch","gotoForgotPassword","textAlign","process","env","GOOGLE_CLIENT_ID","container","display","justifyContent","alignItems","map","text","index","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { searchUniversities } from '../../apis/global-api';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { simpleSignup, login, googleSignup } from '../../apis/auth-api';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authenticated } from '../../redux/actions/auth';\r\nimport { useRouter } from 'next/router';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    padding: '1.5rem 2.0rem',\r\n    [theme.breakpoints.up('sm')]: {\r\n      margin: '2.5rem',\r\n    },\r\n  },\r\n  modal: {\r\n    padding: '0.5rem',\r\n  },\r\n  button: {\r\n    '&:focus': {\r\n      background: 'rgb(177, 90, 16)',\r\n    },\r\n    '& .MuiCircularProgress-colorPrimary': {\r\n      marginLeft: '10px',\r\n      color: '#fff',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const AuthForm = ({ type }) => {\r\n  const [firstname, setfirstname] = useState('');\r\n  const [lastname, setlastname] = useState('');\r\n  const [email, setemail] = useState('');\r\n  const [university, setuniversity] = useState({ name: '' });\r\n  const [password, setpassword] = useState('');\r\n  const [showpassword, setshowpassword] = useState(false);\r\n  const [confirm_password, setconfirm_password] = useState('');\r\n  const [showconfirm_password, setshowconfirm_password] = useState(false);\r\n  const [phone_no, setphone_no] = useState('');\r\n  const [errs, seterrs] = useState({});\r\n  const [universities, setuniversities] = useState([]);\r\n  const [branch, setbranch] = useState('');\r\n  const [loading, setloading] = useState(false);\r\n  const [btnloading, setbtnloading] = useState(false);\r\n  const [backdrop, setbackdrop] = useState(true);\r\n  const [formerrs, setformerrs] = useState([]);\r\n  const [showRedirect, setshowRedirect] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n\r\n  const handleSubmit = (e) => {\r\n    setformerrs([]);\r\n    submitSignUp();\r\n  };\r\n\r\n  const submitLogin = () => {\r\n    setshowRedirect(false);\r\n    setformerrs([]);\r\n    setbtnloading(true);\r\n    let data = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    login(data).then((response) => {\r\n      if (response.error) {\r\n        setbtnloading(false);\r\n        setformerrs(response.msg);\r\n      } else {\r\n        setbtnloading(false);\r\n        let user = response.body.user;\r\n        let accessToken = response.body.user.api_token;\r\n        let favEvents = response.body.favEvents;\r\n        let favProducts = response.body.favProducts;\r\n        setLogin(user, accessToken, favEvents, favProducts);\r\n        setshowRedirect(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const submitSignUp = () => {\r\n    setshowRedirect(false);\r\n    setbtnloading(true);\r\n    // let university_id = universities.find(\r\n    //   (item) => item.name == university.name\r\n    // );\r\n    let data = {\r\n      // first_name: firstname,\r\n      // last_name: lastname,\r\n      email: email,\r\n      // university_id: university_id.id,\r\n      password: password,\r\n      // phone_number: phone_no,\r\n      // branch: branch,\r\n    };\r\n    simpleSignup(data).then((response) => {\r\n      if (response.error) {\r\n        setbtnloading(false);\r\n        setformerrs(response.msg);\r\n      } else {\r\n        let user = response.body.user;\r\n        let accessToken = response.body.user.api_token;\r\n        setbtnloading(false);\r\n        let favEvents = response.body.favEvents;\r\n        let favProducts = response.body.favProducts;\r\n        setLogin(user, accessToken, favEvents, favProducts);\r\n        setshowRedirect(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const setLogin = (user, accessToken, favEvents, favProducts) => {\r\n    console.log(user, accessToken);\r\n    dispatch(authenticated(user, accessToken, favEvents, favProducts));\r\n    if (user.is_complete) {\r\n      router.push('/');\r\n    } else {\r\n      router.push('/profile/edit');\r\n    }\r\n  };\r\n  const responseGoogleSuccess = (response) => {\r\n    let data = {\r\n      email: response.profileObj.email,\r\n      google_id: response.googleId,\r\n    };\r\n    // return\r\n\r\n    googleSignup(data).then((response) => {\r\n      if (response.error) {\r\n        setbtnloading(false);\r\n        setformerrs(response.msg);\r\n      } else {\r\n        let user = response.body.user;\r\n        let accessToken = response.body.user.api_token;\r\n        setbtnloading(false);\r\n        let favEvents = response.body.favEvents;\r\n        let favProducts = response.body.favProducts;\r\n        setLogin(user, accessToken, favEvents, favProducts);\r\n        setshowRedirect(true);\r\n      }\r\n    });\r\n  };\r\n  const responseGoogleFailure = (response) => {\r\n    console.log(response);\r\n    // alert('Oops!! there was some problem while logging in.')\r\n  };\r\n\r\n  const backdropClose = () => {\r\n    setbackdrop(false);\r\n  };\r\n\r\n  const validateform = (e) => {\r\n    e.preventDefault();\r\n    if (type == 'login') {\r\n      submitLogin();\r\n      return;\r\n    }\r\n    let err = {};\r\n    if (password != confirm_password) {\r\n      err.no_same = 'true';\r\n    }\r\n    if (password.length < 8) {\r\n      err.pwd_length = 'true';\r\n    }\r\n    // if (!university.name) {\r\n    //   err.university = \"true\";\r\n    // }\r\n    seterrs(err);\r\n    let has_error = Object.keys(err).length;\r\n    if (!parseInt(has_error)) {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const updateformData = (e, type) => {\r\n    e.preventDefault();\r\n    eval('set' + type + \"('\" + e.target.value + \"')\");\r\n  };\r\n\r\n  const handleUniSearch = (e) => {\r\n    let value = e.target.value;\r\n    if (!value) return;\r\n    setloading(true);\r\n    searchUniversities(value).then((response) => {\r\n      setloading(false);\r\n      setuniversities(response);\r\n    });\r\n  };\r\n\r\n  const gotoForgotPassword = () => {\r\n    router.push('/forgot-password');\r\n  };\r\n  return (\r\n    <div className={classes.form}>\r\n      <div style={{ textAlign: 'center' }} className=\"googleBtn\">\r\n        <GoogleLogin\r\n          clientId={process.env.GOOGLE_CLIENT_ID}\r\n          buttonText={\r\n            type == 'login' ? 'Login with Google' : 'SignUp with Google'\r\n          }\r\n          onSuccess={responseGoogleSuccess}\r\n          onFailure={responseGoogleFailure}\r\n          cookiePolicy={'single_host_origin'}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div style={{ textAlign: 'center' }}>or</div>\r\n      <br />\r\n      <form className={classes.container} onSubmit={validateform}>\r\n        {type == 'signup' && (\r\n          <>\r\n            {/* <TextField\r\n              required\r\n              margin=\"dense\"\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={firstname}\r\n              onChange={(e) => updateformData(e, \"firstname\")}\r\n              name=\"first_name\"\r\n            />\r\n            <TextField\r\n              required\r\n              margin=\"dense\"\r\n              label=\"Last Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={lastname}\r\n              onChange={(e) => updateformData(e, \"lastname\")}\r\n              name=\"last_name\"\r\n            /> */}\r\n          </>\r\n        )}\r\n        <TextField\r\n          required\r\n          margin=\"dense\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          fullWidth\r\n          value={email}\r\n          onChange={(e) => updateformData(e, 'email')}\r\n          name=\"email\"\r\n        />\r\n        {type == 'signup' && (\r\n          <>\r\n            {/* <TextField\r\n              required\r\n              margin=\"dense\"\r\n              label=\"Phone No\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={phone_no}\r\n              onChange={(e) => updateformData(e, \"phone_no\")}\r\n              name=\"phone\"\r\n            />\r\n            <Autocomplete\r\n              required\r\n              options={universities}\r\n              getOptionLabel={(option) => {\r\n                return option.name;\r\n              }}\r\n              getOptionSelected={(option, value) => option.name === value.name}\r\n              loading={loading}\r\n              value={university}\r\n              onInputChange={handleUniSearch}\r\n              // onChange={(e) => updateformData(e, \"university\")}\r\n              onSelect={(e) => setuniversity({ name: e.target.value })}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Search college\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    endAdornment: (\r\n                      <React.Fragment>\r\n                        {loading ? (\r\n                          <CircularProgress color=\"primary\" size={20} />\r\n                        ) : null}\r\n                        {params.InputProps.endAdornment}\r\n                      </React.Fragment>\r\n                    ),\r\n                  }}\r\n                />\r\n              )}\r\n            /> */}\r\n            {errs['university'] && (\r\n              <Typography color=\"error\">Please select a university.</Typography>\r\n            )}\r\n            {/* <TextField\r\n              required\r\n              margin=\"dense\"\r\n              label=\"Branch\"\r\n              type=\"branch\"\r\n              fullWidth\r\n              value={branch}\r\n              onChange={(e) => updateformData(e, \"branch\")}\r\n              name=\"branch\"\r\n            /> */}\r\n          </>\r\n        )}\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <TextField\r\n            required\r\n            margin=\"dense\"\r\n            label=\"Password\"\r\n            type={showpassword ? 'text' : 'password'}\r\n            fullWidth\r\n            value={password}\r\n            onChange={(e) => updateformData(e, 'password')}\r\n            name=\"password\"\r\n          />\r\n          <span onClick={() => setshowpassword(!showpassword)}>\r\n            {' '}\r\n            {showpassword ? <Visibility /> : <VisibilityOff />}\r\n          </span>\r\n        </div>\r\n        {type == 'signup' && (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <TextField\r\n              required\r\n              margin=\"dense\"\r\n              label=\"Confirm Password\"\r\n              type={showconfirm_password ? 'text' : 'password'}\r\n              fullWidth\r\n              value={confirm_password}\r\n              onChange={(e) => updateformData(e, 'confirm_password')}\r\n              name=\"confirm_password\"\r\n            />\r\n            <span\r\n              onClick={() => setshowconfirm_password(!showconfirm_password)}\r\n            >\r\n              {' '}\r\n              {showconfirm_password ? <Visibility /> : <VisibilityOff />}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {errs['no_same'] && (\r\n          <Typography color=\"error\">\r\n            Password must match with confirm password\r\n          </Typography>\r\n        )}\r\n        {errs['pwd_length'] && (\r\n          <Typography color=\"error\">Password must have 8 characters</Typography>\r\n        )}\r\n        <div>\r\n          {formerrs.length > 0 &&\r\n            formerrs.map((text, index) => (\r\n              <Typography color=\"error\" key={`err-${index}`}>\r\n                {text}\r\n              </Typography>\r\n            ))}\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          {type == 'login' ? 'Login' : 'SignUp'}\r\n\r\n          {btnloading ? <CircularProgress color=\"primary\" size={20} /> : null}\r\n        </Button>\r\n      </form>\r\n\r\n      <p style={{ cursor: 'pointer' }} onClick={gotoForgotPassword}>\r\n        Forgot password ? click <span>here</span>\r\n      </p>\r\n      {showRedirect && (\r\n        <Typography color=\"primary\">\r\n          Redirecting to profile page!!{' '}\r\n          <CircularProgress color=\"primary\" size={20} />\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}